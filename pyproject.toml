[tool.poetry]
name = "pythonproject"
version = "0.1.0"
description = ""
authors = ["Aldo Mateli <aldo.mateli@gmail.com>"]
license = "MIT"
readme = "README.md"

[tool.poetry.dependencies]
python = "^3.6"

[tool.poetry.group.dev.dependencies]
black = "^23.7.0"
ruff = "^0.0.284"
setuptools = "^68.0.0"
mkdocs = "^1.5.2"
pylint = "^2.17.5"

[tool.black]
line-length = 120

[tool.ruff]
target-version = "py37"
line-length = 120
src = ["src"]
fixable = ["ALL"]
select = ["ALL"]
ignore = [
    "ANN401", # Allow returning any. Parameter bag has to store/retrieve arbitraty types.
    "PT009", # Prefer using assertEqual instead of plain asserts
    "ANN101", # Exclude self from type hint requirement,
    "TD003", # Exclude "missing issue link for todos",
    "FIX002", # Disable "Line contains to do, consider resolving the issue". It will be done, in due time.
    "D100", # Disable undocumented public module. The definitions themselves will be documented
    "D104", # Same as above, disable missing docstring in public package,
    "D203", # Ignore "one blank line before class". Using "no blank lines before class rule".
    "D213", # Disable "Summary must go into next line"
]

[build-system]
requires = ["poetry-core"]
build-backend = "poetry.core.masonry.api"
